<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baoshu.dao.mapper.TransLogMapper">
  <resultMap id="BaseResultMap" type="com.baoshu.dao.model.TransLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="fundid" jdbcType="VARCHAR" property="fundid" />
    <result column="child_fundid" jdbcType="VARCHAR" property="childFundid" />
    <result column="stk_code" jdbcType="VARCHAR" property="stkCode" />
    <result column="qty" jdbcType="INTEGER" property="qty" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="market" jdbcType="VARCHAR" property="market" />
    <result column="qsflag" jdbcType="VARCHAR" property="qsflag" />
    <result column="lsno" jdbcType="VARCHAR" property="lsno" />
    <result column="devide_order_no" jdbcType="VARCHAR" property="devideOrderNo" />
    <result column="orders_no" jdbcType="VARCHAR" property="ordersNo" />
    <result column="request_id" jdbcType="VARCHAR" property="requestId" />
    <result column="is_done" jdbcType="BIT" property="isDone" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, flag, fundid, child_fundid, stk_code, qty, price, market, qsflag, lsno, devide_order_no, 
    orders_no, request_id, is_done, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.baoshu.dao.model.TransLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from trans_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trans_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trans_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.baoshu.dao.model.TransLogExample">
    delete from trans_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.baoshu.dao.model.TransLog">
    insert into trans_log (id, flag, fundid, 
      child_fundid, stk_code, qty, 
      price, market, qsflag, 
      lsno, devide_order_no, orders_no, 
      request_id, is_done, create_date, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{flag,jdbcType=VARCHAR}, #{fundid,jdbcType=VARCHAR}, 
      #{childFundid,jdbcType=VARCHAR}, #{stkCode,jdbcType=VARCHAR}, #{qty,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{market,jdbcType=VARCHAR}, #{qsflag,jdbcType=VARCHAR}, 
      #{lsno,jdbcType=VARCHAR}, #{devideOrderNo,jdbcType=VARCHAR}, #{ordersNo,jdbcType=VARCHAR}, 
      #{requestId,jdbcType=VARCHAR}, #{isDone,jdbcType=BIT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.baoshu.dao.model.TransLog">
    insert into trans_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="fundid != null">
        fundid,
      </if>
      <if test="childFundid != null">
        child_fundid,
      </if>
      <if test="stkCode != null">
        stk_code,
      </if>
      <if test="qty != null">
        qty,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="market != null">
        market,
      </if>
      <if test="qsflag != null">
        qsflag,
      </if>
      <if test="lsno != null">
        lsno,
      </if>
      <if test="devideOrderNo != null">
        devide_order_no,
      </if>
      <if test="ordersNo != null">
        orders_no,
      </if>
      <if test="requestId != null">
        request_id,
      </if>
      <if test="isDone != null">
        is_done,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="fundid != null">
        #{fundid,jdbcType=VARCHAR},
      </if>
      <if test="childFundid != null">
        #{childFundid,jdbcType=VARCHAR},
      </if>
      <if test="stkCode != null">
        #{stkCode,jdbcType=VARCHAR},
      </if>
      <if test="qty != null">
        #{qty,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="market != null">
        #{market,jdbcType=VARCHAR},
      </if>
      <if test="qsflag != null">
        #{qsflag,jdbcType=VARCHAR},
      </if>
      <if test="lsno != null">
        #{lsno,jdbcType=VARCHAR},
      </if>
      <if test="devideOrderNo != null">
        #{devideOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="ordersNo != null">
        #{ordersNo,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="isDone != null">
        #{isDone,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.baoshu.dao.model.TransLogExample" resultType="java.lang.Long">
    select count(*) from trans_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trans_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=VARCHAR},
      </if>
      <if test="record.fundid != null">
        fundid = #{record.fundid,jdbcType=VARCHAR},
      </if>
      <if test="record.childFundid != null">
        child_fundid = #{record.childFundid,jdbcType=VARCHAR},
      </if>
      <if test="record.stkCode != null">
        stk_code = #{record.stkCode,jdbcType=VARCHAR},
      </if>
      <if test="record.qty != null">
        qty = #{record.qty,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.market != null">
        market = #{record.market,jdbcType=VARCHAR},
      </if>
      <if test="record.qsflag != null">
        qsflag = #{record.qsflag,jdbcType=VARCHAR},
      </if>
      <if test="record.lsno != null">
        lsno = #{record.lsno,jdbcType=VARCHAR},
      </if>
      <if test="record.devideOrderNo != null">
        devide_order_no = #{record.devideOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.ordersNo != null">
        orders_no = #{record.ordersNo,jdbcType=VARCHAR},
      </if>
      <if test="record.requestId != null">
        request_id = #{record.requestId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDone != null">
        is_done = #{record.isDone,jdbcType=BIT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trans_log
    set id = #{record.id,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=VARCHAR},
      fundid = #{record.fundid,jdbcType=VARCHAR},
      child_fundid = #{record.childFundid,jdbcType=VARCHAR},
      stk_code = #{record.stkCode,jdbcType=VARCHAR},
      qty = #{record.qty,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      market = #{record.market,jdbcType=VARCHAR},
      qsflag = #{record.qsflag,jdbcType=VARCHAR},
      lsno = #{record.lsno,jdbcType=VARCHAR},
      devide_order_no = #{record.devideOrderNo,jdbcType=VARCHAR},
      orders_no = #{record.ordersNo,jdbcType=VARCHAR},
      request_id = #{record.requestId,jdbcType=VARCHAR},
      is_done = #{record.isDone,jdbcType=BIT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.baoshu.dao.model.TransLog">
    update trans_log
    <set>
      <if test="flag != null">
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="fundid != null">
        fundid = #{fundid,jdbcType=VARCHAR},
      </if>
      <if test="childFundid != null">
        child_fundid = #{childFundid,jdbcType=VARCHAR},
      </if>
      <if test="stkCode != null">
        stk_code = #{stkCode,jdbcType=VARCHAR},
      </if>
      <if test="qty != null">
        qty = #{qty,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="market != null">
        market = #{market,jdbcType=VARCHAR},
      </if>
      <if test="qsflag != null">
        qsflag = #{qsflag,jdbcType=VARCHAR},
      </if>
      <if test="lsno != null">
        lsno = #{lsno,jdbcType=VARCHAR},
      </if>
      <if test="devideOrderNo != null">
        devide_order_no = #{devideOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="ordersNo != null">
        orders_no = #{ordersNo,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        request_id = #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="isDone != null">
        is_done = #{isDone,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baoshu.dao.model.TransLog">
    update trans_log
    set flag = #{flag,jdbcType=VARCHAR},
      fundid = #{fundid,jdbcType=VARCHAR},
      child_fundid = #{childFundid,jdbcType=VARCHAR},
      stk_code = #{stkCode,jdbcType=VARCHAR},
      qty = #{qty,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      market = #{market,jdbcType=VARCHAR},
      qsflag = #{qsflag,jdbcType=VARCHAR},
      lsno = #{lsno,jdbcType=VARCHAR},
      devide_order_no = #{devideOrderNo,jdbcType=VARCHAR},
      orders_no = #{ordersNo,jdbcType=VARCHAR},
      request_id = #{requestId,jdbcType=VARCHAR},
      is_done = #{isDone,jdbcType=BIT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>